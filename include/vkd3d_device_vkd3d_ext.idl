/*
 * * Copyright 2021 NVIDIA Corporation
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
 */
import "vkd3d_d3d12.idl";

typedef struct VkInstance_T *VkInstance;
typedef struct VkPhysicalDevice_T *VkPhysicalDevice;
typedef struct VkDevice_T *VkDevice;

typedef enum D3D12_VK_EXTENSION
{
    D3D12_VK_EXT_DRAW_INDIRECT_COUNT = 0x1
} D3D12_VK_EXTENSION;

[
    uuid(11ea7a1a-0f6a-49bf-b612-3e30f8e201dd),
    object,
    local,
    pointer_default(unique)
]
interface ID3D12DeviceExt : IUnknown
{
    HRESULT GetVulkanHandles(VkInstance *pVkInstance, VkPhysicalDevice *pVkPhysicalDevice, VkDevice *pVkDevice);

    BOOL GetExtensionSupport(D3D12_VK_EXTENSION extension);
}

